.\" Automatically generated by Pandoc 2.13
.\"
.TH "NFIQ2" "1" "" "Version 2.1" "National Institute of Standards and Technology"
.hy
.SH NAME
.PP
\f[B]nfiq2\f[R] \[em] Compute quality of 500 PPI fingerprint images
.SH SYNOPSIS
.TP
One (or more) images, records, directories, or RecordStores:
\f[B]nfiq2\f[R] [OPTION\&...] \f[I]path\f[R] [\f[I]path\f[R] \&...]
.TP
Batch files:
\f[B]nfiq2\f[R] [OPTION\&...] -f \f[I]batchfile\f[R] [-f
\f[I]batchfile\f[R] \&...]
.SH DESCRIPTION
.PP
\f[B]nfiq2\f[R] is a tool for computing the NIST Fingerprint Image
Quality (NFIQ) 2 quality score of \f[B]500 PPI\f[R] fingerprint images.
It supports most common image formats, including images within ANSI/NIST
ITL Type 14 records, ISO/IEC 19794-4 records, and Biometric Evaluation
Framework RecordStores.
\f[B]nfiq2\f[R] serves as a reference implementation of ISO/IEC
29794-4:2017.
.PP
\f[B]nfiq2\f[R] outputs scores in Comma Separated Values (CSV) format.
The default output includes information about the image including: the
image\[cq]s name, finger position (if applicable), quality score, error
message (if applicable), whether the image was quantized, and whether
the image was resampled.
.PP
This tool features some additional options, including batch operation
support, output redirection, and multi-threading, listed below.
.SH OPTIONS
.TP
\f[B]-i\f[R] \f[I]image/record/directory/rs\f[R]
Allows for explicit \f[I]image/record/directory/rs\f[R] arguments to be
passed.
Using this option with a \f[I]image/record/directory/rs\f[R] is
equivalent to providing file paths directly to \f[B]nfiq2\f[R].
.TP
\f[B]-f\f[R] \f[I]batch\f[R]
Batch files.
A batch file is a plain text file, where each line is the path to a file
to process.
.TP
\f[B]-o\f[R] \f[I]file\f[R]
Write all output to be printed to \f[I]file\f[R].
\f[I]file\f[R] will be overwritten if it exists.
.TP
\f[B]-j\f[R] \f[I]threads\f[R]
Indicates the number of worker \f[I]threads\f[R] that will be spawned
when running batch or RecordStore operations.
This number may exceed the number of physical cores on a user\[cq]s
system; however, a warning will appear asking if the user would like to
proceed or change the number of \f[I]threads\f[R] to equal the number of
physical cores.
Note that one additional thread will be spawned for coordinating output.
.TP
\f[B]-a\f[R]
Actionable quality output.
Provides additonal actionable quality feedback pertainting to each
processed fingerprint image.
.TP
\f[B]-v\f[R]
Verbose output.
Provides individual quality feature values computed during the
calculation of the overall quality score.
.TP
\f[B]-q\f[R]
Speed.
Provides elapsed time for each quality feature computation.
.TP
\f[B]-d\f[R]
Debug.
Provides additional information pertaining to program execution and
details each step of computation.
.TP
\f[B]-F\f[R]
Force.
Does not ask for user input when when an image does not meet image
requirements.
See \f[B]NOTES 2\f[R].
.TP
\f[B]-r\f[R]
Recursion.
Allows for directories to be recursively scanned for images/records.
The recursion performed is depth-first and stops once all branches have
been scanned.
.TP
\f[B]-m\f[R] \f[I]model\f[R]
Path to an model information file.
Allows for alternative random forest parameters to be used in
conjunction with \f[B]nfiq2\f[R].
A default file is provided.
This file contains \[lq]\f[I]Key\f[R] = \f[I]Value\f[R]\[rq] pairs of
information, with \f[I]Key\f[R]:
.RS
.IP \[bu] 2
\f[B]Name\f[R]: Name given to this set of random forest parameters.
.IP \[bu] 2
\f[B]Description\f[R]: Description of the training.
.IP \[bu] 2
\f[B]Trainer\f[R]: Entity that created this set of parameters.
.IP \[bu] 2
\f[B]Version\f[R]: Version number of the parameters.
.IP \[bu] 2
\f[B]Path\f[R]: Path to the random forest parameters.
If the path provided is relative, it must be relative to the directory
containing the file passed with \f[I]-m\f[R], not the current working
directory or the nfiq2 executable.
.IP \[bu] 2
\f[B]Hash\f[R]: Hash of random forest parameters, as parsed by OpenCV.
.RE
.SH NOTES
.IP "1." 3
NFIQ 2 has restrictions on image dimensions via a restriction in one of
its dependencies.
Images width must be greater than 196 pixels and less than 800 pixels.
Image height must be greater than 196 pixels and less than 1000 pixels.
These dimensions are calculated \f[I]after\f[R] NFIQ 2 crops whitespace
from the edges of the image.
.IP "2." 3
NFIQ 2 has restrictions on what kinds of fingerprint images it can
process.
The color depth and bit depth of an image must be 8 (i.e., maximum of
255 shades of gray).
The PPI of an image must be 500.
\f[B]nfiq2\f[R] has mechanisms to quantize and/or resample images that
do not meet these qualifications so that a quality score can still be
produced.
These mechanisms will be automatically applied when utilizing the
\f[B]-F\f[R] flag when the source resolution is known.
If the resolution cannot be determined, the \f[B]-F\f[R] flag will
assume the resolution is 500 PPI.
.IP "3." 3
Output is generated in a CSV format.
Headers are printed before any scores are printed.
The exception to this format is when a single image is provided without
the \f[B]-v\f[R] or \f[B]-q\f[R] flag.
In this case, only the quality score is printed for the image.
.IP "4." 3
Current supported formats include:
.RS 4
.IP "1." 3
BMP, JPEG, JPEGL, JPEG 2000, PBM/PGM/PPM, PNG, TIFF, WSQ
.IP "2." 3
Biometric Evaluation Framework RecordStores
.IP "3." 3
ANSI/NIST-ITL 1-2007 and later Type 14 (binary only, not XML)
.IP "4." 3
ISO/IEC 19794-4
.RE
.SH EXAMPLES
.PP
The following are examples of using \f[B]nfiq2\f[R] on different file
types and option combinations.
.TP
nfiq2 print1.wsq
Prints the quality score of \f[I]print1.wsq\f[R] to the screen.
.TP
nfiq2 print1.wsq print2.png print3.an2
Prints the standard CSV formatted scores of \f[I]print1.wsq\f[R],
\f[I]print2.png\f[R], and \f[I]print3.an2\f[R].
.TP
nfiq2 fingerprintDir
Searches the directory \f[I]fingerprintDir\f[R] and processes all of the
fingerprint images it can identify.
.TP
nfiq2 -r fingerprintDir
Recursively searches through \f[I]fingerprintDir\f[R] and all
directories within \f[I]fingerprintDir\f[R] to find and process all
identifiable fingerprints.
.TP
nfiq2 -r -i print1.tif -i fingerprintDir -o output.csv print2.jpg print3.bmp
Produces quality scores of \f[I]print1.tif\f[R], \f[I]print2.jpg\f[R],
and \f[I]print3.bmp\f[R].
Recursively traverses \f[I]fingerprintDir\f[R] and prints the quality
scores of the fingerprint images it discovers in there.
Saves all output to a file in the current directory named
\f[I]output.csv\f[R].
This example showcases how \f[B]nfiq2\f[R] can support multiple types of
arguments in a single execution.
.TP
nfiq2 -v -q fingerprintDir
Produces the quality scores of the fingerprint images stored inside of
\f[I]fingerprintDir\f[R].
NFIQ 2 quality feature values and their timings are also printed in
additional CSV columns.
.TP
nfiq2 -F mixedFingerprintDir
\f[I]mixedFingerprintDir\f[R] contains a variety of fingerprint images.
Some adhere to NFIQ 2\[cq]s 8 bit and color depth, and 500 PPI
requirements, some do not.
The \f[I]-F\f[R] option automatically applies any quantizing and
resampling applicable to each image scanned.
.TP
nfiq2 -f batchFile1.txt
The \f[B]-f\f[R] option denotes \f[I]batchFile1.txt\f[R] as a batch file
comprising of a list of paths to fingerprint images.
\f[B]nfiq2\f[R] reads the content of \f[I]batchFile1.txt\f[R],
sequentially calculates the quality of each image, and prints it to the
console.
.TP
nfiq2 -v -q -f batchFile1.txt -j 4
This is a multi-threaded batch operation on \f[I]batchFile1.txt\f[R],
utilizing \f[I]4\f[R] threads, denoted by the \f[B]-j\f[R] option.
The \f[B]-v\f[R] and \f[B]-q\f[R] options are also enabled, outputting
NFIQ 2 quality feature values and their speeds.
.TP
nfiq2 recordStore1
Iterates through the records of \f[I]recordStore1\f[R], producing
quality scores of the images stored within the RecordStore sequentially.
.TP
nfiq2 -j 8 recordStore1
Multi-threaded operation processing the records of
\f[I]recordStore1\f[R], utilizing \f[I]8\f[R] worker \f[I]threads\f[R].
.SH VERSION
.PP
This man page is current for version 2.1 of \f[B]nfiq2\f[R].
.SH HISTORY
.PP
The NFIQ 2 algorithm was first released in April 2016 by NIST, in
collaboration with Germany\[cq]s Federal Office for Information Security
and Federal Criminal Police Office, as well as research and development
entities MITRE, Fraunhofer IGD, Hochschule Darmstadt, and Secunet.
.PP
This revision of the NFIQ 2 command line interface was first released by
NIST in August 2020.
